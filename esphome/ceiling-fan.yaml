# Make sure to use ESPHome 2024.7 or above, which includes a fix for this device: https://github.com/esphome/esphome/pull/6980

substitutions:
  friendly_name: Bedroom Ceiling Fan
  device_name: bedroom-ceiling-fan
  device_id: bedroom_ceiling_fan
  device_description: ESP12F - CREATE WINDCALM Fan

esphome:
  name: ${device_name}
  comment: ${device_description}
  friendly_name: ${friendly_name}
  
esp8266:
  board: esp01_1m

logger:
  baud_rate: 0 # Disable UART logging

# Enable Home Assistant API
api:
  encryption:
    key: !secret encryption_key

ota:
  - platform: esphome
    password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  fast_connect: on # Don't scan networks, connect straight away
  manual_ip:
    static_ip: 10.0.20.11
    gateway: 10.0.0.1
    subnet: 255.255.0.0
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: ${device_name}
    password: !secret fallback_ap_password

# Enable web server
web_server:
  port: 80

# Sync time with home assistant
time:
  - platform: homeassistant
    id: homeassistant_time

# Device specific configuration
# CREATE - WINDCALM DC - ceiling fan

uart:
  rx_pin: GPIO3
  tx_pin: GPIO1
  baud_rate: 9600
  debug:
  
# Register the Tuya MCU connection
tuya:
  id: "tuya_device"
  time_id: homeassistant_time

fan:
  - platform: "tuya"
    id: fan_device
    name: "Fan"
    switch_datapoint: 60
    speed_datapoint: 62
    direction_datapoint: 63
    speed_count: 6
    restore_mode: ALWAYS_OFF

light:
  - platform: "tuya"
    id: light_device
    name: "Light"
    switch_datapoint: 20
    restore_mode: ALWAYS_OFF

# We can set the countdown timer data point, but the actual countdown is handled by the MCU.
# Currently the fan turns off when the timer expires, but there is no feedback to ESPHome.
# It also turns the fan off in the MCU, in a way that disables any other commands coming from ESPHome.
# The only way to get the fan working again after the timer expires is to turn it on with the RF remote.
# It's a better idea to create our own timer sensor and countdown in ESPHome and leave this DP alone.
# number:
#  - platform: "tuya"
#    id: timer
#    name: "Timer"
#    unit_of_measurement: "min"
#    number_datapoint: 64
#    min_value: 0
#    max_value: 480
#    step: 1

switch:
  - platform: restart
    name: "Restart"

binary_sensor:
  - platform: status
    name: "Status"
    device_class: connectivity

sensor:
  - platform: wifi_signal
    name: "Wifi Signal"
    update_interval: 60s
    icon: mdi:wifi

  - platform: uptime
    name: "Uptime Seconds"
    update_interval: 60s
    icon: mdi:clock-outline
